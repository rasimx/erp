type CurrentState {
  exists: Boolean!
}

type Account {
  id: Int!
  name: String!
}

type AccountCredentials {
  id: Int!
  name: String!
  apiKey: String!
}

type Job {
  jobId: String!
  date: String!
  status: String!
}

enum SyncStatus {
  completed
  failed
  active
  waiting
}

type LastSync {
  timestamp: String!
  status: SyncStatus!
}


input CreateAccountInput {
  id: Int!
  name: String!
  apiKey: String!
}

input UpdateAccountInput {
  name: String!
  apiKey: String!
}

type Product {
  id: Int!
  name: String!
  offerId: String!
}


type Query {
  state: CurrentState

  accountList: [Account!]!
  getAccountCredentials: AccountCredentials!

  lastSync: LastSync!

  productList: [Product!]!
}
type Mutation {
  createAccount(input: CreateAccountInput!): Account!
  updateAccount(input: UpdateAccountInput!): Account!
  startSync: LastSync!
}

