syntax = "proto3";

package keyword;

service KeywordService {
  rpc FindOneById (KeywordById) returns (KeywordResponse) {}
  rpc FindByIds (KeywordListById) returns (KeywordList) {}
  rpc FindOneByText (KeywordByText) returns (KeywordResponse) {}
  rpc FindByText (KeywordListByText) returns (KeywordList) {}
  rpc AddNewTexts (TextList) returns (KeywordList) {}
  rpc FindByMoreThan (FindMoreThanReq) returns (FindMoreThanRes) {}
  rpc SimilarWordCount (SimilarWordCountReq) returns (SimilarWordCountRes) {}
}

message KeywordById {
  int32 id = 1;
}
message KeywordListById {
  repeated int32 id_list = 1;
}
message KeywordByText {
  string text = 1;
}
message KeywordListByText {
  repeated string text_list = 1;
}

message TextList {
  repeated string items = 1;
}

message Keyword {
  uint32 id = 1;
  string text = 2;
}

message KeywordResponse {
  optional Keyword keyword = 1;
}
message KeywordList {
  repeated Keyword items = 1;
}

message FindMoreThanReq {
  int32 more_than_id = 1;
  int32 limit = 2;
}

message FindMoreThanRes {
  repeated Keyword items = 1;
}

message Product {
  uint32 id = 1;
  string title = 2;
}

message SimilarWordCountReq {
  string keyword = 1;
  repeated Product products = 2;
}

message SimilarWordCount {
  uint32 id = 1;
  uint32 count = 2;
}

message SimilarWordCountRes {
  string keyword = 1;
  repeated SimilarWordCount items = 2;
}